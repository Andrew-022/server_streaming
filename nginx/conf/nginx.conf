worker_processes  1;

error_log  logs/error.log info;

events {
    worker_connections  512; #Cantidad de conexiones simultáneas, cambia este número para limitar tu servidor a tus posibilidades.
}



rtmp {
    server {
        listen 1935;
		ping 30s;
		notify_method get;
        application live {
            live on;
			on_publish http://127.0.0.1:80/auth; #si vas emitir desde otro PC, pon la IP de este equipo en la red.
            hls on;
			hls_fragment 3;
            hls_path www/hls;
            record all;
            record_path records/hls;
            record_unique on;
        }

        application live1 {
            live on;
			on_publish http://127.0.0.1:80/auth; #si vas emitir desde otro PC, pon la IP de este equipo en la red.
            hls on;
			hls_fragment 3;
            hls_path www/hls1;
            record all;
            record_path records/hls1;
            record_unique on;

        }
        application live2 {
            live on;
			on_publish http://127.0.0.1:80/auth; #si vas emitir desde otro PC, pon la IP de este equipo en la red.
            hls on;
			hls_fragment 3;
            hls_path www/hls2;
            record all;
            record_path records/hls2;
            record_unique on;

        }
    }
}

http{
   server {
        listen 443 ssl;
	server_name pruebastreaming.ddns.net;
		ssl on;
		ssl_certificate C:/Certbot/live/pruebastreaming.ddns.net/fullchain.pem; #Sustituye donde pone TUDIRECCION por tu dirección púbica, ejemplo: direccion.ddns.net
		ssl_certificate_key C:/Certbot/live/pruebastreaming.ddns.net/privkey.pem; #Aquí lo mismo
		ssl_session_timeout 5m;
		charset utf-8;

        location / {
			add_header Cache-Control no-cache;
			root www;
		}
   }
       map $arg_app $psk {
               include D:/nginx/conf/passwords.conf;
           }

           server {
               listen 80;

               location /auth {
                   if ($psk = $arg_psk) {
                       return 201;
                   }
                   return 404;
               }
           }

}
